import { z } from "zod";
declare const WelcomeCardConfigSchema: z.ZodObject<{
    background_image: z.ZodString;
    font_path: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    font_family: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    title_template: z.ZodDefault<z.ZodString>;
    subtitle_template: z.ZodDefault<z.ZodString>;
    body_template: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    text_color: z.ZodDefault<z.ZodString>;
    accent_color: z.ZodDefault<z.ZodString>;
    overlay_color: z.ZodDefault<z.ZodOptional<z.ZodNullable<z.ZodString>>>;
    avatar_border_color: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    avatar_offset_x: z.ZodDefault<z.ZodNumber>;
    avatar_offset_y: z.ZodDefault<z.ZodNumber>;
    title_offset_x: z.ZodDefault<z.ZodNumber>;
    title_offset_y: z.ZodDefault<z.ZodNumber>;
    title_font_size: z.ZodDefault<z.ZodNumber>;
    subtitle_offset_x: z.ZodDefault<z.ZodNumber>;
    subtitle_offset_y: z.ZodDefault<z.ZodNumber>;
    subtitle_font_size: z.ZodDefault<z.ZodNumber>;
    body_offset_x: z.ZodDefault<z.ZodNumber>;
    body_offset_y: z.ZodDefault<z.ZodNumber>;
    body_font_size: z.ZodDefault<z.ZodNumber>;
}, z.core.$strict>;
declare const WelcomeConfigSchema: z.ZodObject<{
    channel_id: z.ZodString;
    title_template: z.ZodDefault<z.ZodString>;
    description_template: z.ZodDefault<z.ZodString>;
    message_template: z.ZodDefault<z.ZodString>;
    mode: z.ZodDefault<z.ZodEnum<{
        embed: "embed";
        card: "card";
    }>>;
    member_index_mode: z.ZodDefault<z.ZodEnum<{
        include_bots: "include_bots";
        exclude_bots: "exclude_bots";
    }>>;
    join_field_label: z.ZodDefault<z.ZodString>;
    join_timezone: z.ZodDefault<z.ZodString>;
    buttons: z.ZodDefault<z.ZodArray<z.ZodObject<{
        label: z.ZodString;
        target: z.ZodEnum<{
            url: "url";
            channel: "channel";
        }>;
        value: z.ZodString;
        emoji: z.ZodNullable<z.ZodOptional<z.ZodString>>;
    }, z.core.$strip>>>;
    footer_text: z.ZodDefault<z.ZodString>;
    thread_name_template: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    card: z.ZodOptional<z.ZodNullable<z.ZodObject<{
        background_image: z.ZodString;
        font_path: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        font_family: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        title_template: z.ZodDefault<z.ZodString>;
        subtitle_template: z.ZodDefault<z.ZodString>;
        body_template: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        text_color: z.ZodDefault<z.ZodString>;
        accent_color: z.ZodDefault<z.ZodString>;
        overlay_color: z.ZodDefault<z.ZodOptional<z.ZodNullable<z.ZodString>>>;
        avatar_border_color: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        avatar_offset_x: z.ZodDefault<z.ZodNumber>;
        avatar_offset_y: z.ZodDefault<z.ZodNumber>;
        title_offset_x: z.ZodDefault<z.ZodNumber>;
        title_offset_y: z.ZodDefault<z.ZodNumber>;
        title_font_size: z.ZodDefault<z.ZodNumber>;
        subtitle_offset_x: z.ZodDefault<z.ZodNumber>;
        subtitle_offset_y: z.ZodDefault<z.ZodNumber>;
        subtitle_font_size: z.ZodDefault<z.ZodNumber>;
        body_offset_x: z.ZodDefault<z.ZodNumber>;
        body_offset_y: z.ZodDefault<z.ZodNumber>;
        body_font_size: z.ZodDefault<z.ZodNumber>;
    }, z.core.$strict>>>;
}, z.core.$strict>;
export declare const RoleAssignmentSchema: z.ZodObject<{
    id: z.ZodString;
    label: z.ZodString;
    emoji: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    description: z.ZodOptional<z.ZodString>;
    assignOnJoin: z.ZodDefault<z.ZodBoolean>;
}, z.core.$strip>;
export declare const RoleAssignmentsConfigSchema: z.ZodDefault<z.ZodObject<{
    staffRoleIds: z.ZodDefault<z.ZodArray<z.ZodString>>;
    autoAssign: z.ZodDefault<z.ZodArray<z.ZodObject<{
        id: z.ZodString;
        label: z.ZodString;
        emoji: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        description: z.ZodOptional<z.ZodString>;
        assignOnJoin: z.ZodDefault<z.ZodBoolean>;
    }, z.core.$strip>>>;
    reactions: z.ZodDefault<z.ZodArray<z.ZodObject<{
        id: z.ZodString;
        label: z.ZodString;
        emoji: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        description: z.ZodOptional<z.ZodString>;
        assignOnJoin: z.ZodDefault<z.ZodBoolean>;
    }, z.core.$strip>>>;
}, z.core.$strip>>;
declare const VerifyConfigSchema: z.ZodObject<{
    channel_id: z.ZodString;
    role_id: z.ZodString;
    mode: z.ZodDefault<z.ZodEnum<{
        button: "button";
        reaction: "reaction";
    }>>;
    prompt: z.ZodDefault<z.ZodString>;
    message_id: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    emoji: z.ZodOptional<z.ZodNullable<z.ZodString>>;
}, z.core.$strip>;
export declare const RolesPanelConfigSchema: z.ZodObject<{
    channel_id: z.ZodString;
    style: z.ZodDefault<z.ZodEnum<{
        buttons: "buttons";
        reactions: "reactions";
        select: "select";
    }>>;
    roles: z.ZodDefault<z.ZodArray<z.ZodObject<{
        role_id: z.ZodString;
        label: z.ZodString;
        description: z.ZodOptional<z.ZodString>;
        emoji: z.ZodOptional<z.ZodString>;
        hidden: z.ZodDefault<z.ZodBoolean>;
        sort_order: z.ZodDefault<z.ZodNumber>;
    }, z.core.$strip>>>;
    message_id: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    message_content: z.ZodOptional<z.ZodNullable<z.ZodString>>;
}, z.core.$strip>;
export declare const IntroduceSchemaConfigSchema: z.ZodObject<{
    fields: z.ZodDefault<z.ZodArray<z.ZodObject<{
        field_id: z.ZodString;
        label: z.ZodString;
        placeholder: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        required: z.ZodDefault<z.ZodBoolean>;
        enabled: z.ZodDefault<z.ZodBoolean>;
        max_length: z.ZodDefault<z.ZodNumber>;
    }, z.core.$strip>>>;
}, z.core.$strip>;
export declare const IntroduceConfigSchema: z.ZodObject<{
    channel_id: z.ZodString;
    mention_role_ids: z.ZodDefault<z.ZodArray<z.ZodString>>;
    embed_title: z.ZodDefault<z.ZodString>;
    footer_text: z.ZodOptional<z.ZodNullable<z.ZodString>>;
}, z.core.$strip>;
declare const RagConfigSchema: z.ZodDefault<z.ZodObject<{
    prompts: z.ZodDefault<z.ZodObject<{
        base: z.ZodString;
        help: z.ZodString;
        coach: z.ZodString;
        chat: z.ZodString;
    }, z.core.$strip>>;
    feelings: z.ZodDefault<z.ZodObject<{
        excitement: z.ZodDefault<z.ZodNumber>;
        empathy: z.ZodDefault<z.ZodNumber>;
        probability: z.ZodDefault<z.ZodNumber>;
        cooldown_minutes: z.ZodDefault<z.ZodNumber>;
        default_mode: z.ZodDefault<z.ZodEnum<{
            help: "help";
            coach: "coach";
            chat: "chat";
        }>>;
    }, z.core.$strip>>;
    short_term: z.ZodDefault<z.ZodObject<{
        excluded_channels: z.ZodDefault<z.ZodArray<z.ZodString>>;
    }, z.core.$strip>>;
}, z.core.$strip>>;
export declare const SettingsConfigSchema: z.ZodDefault<z.ZodObject<{
    locale: z.ZodOptional<z.ZodString>;
    timezone: z.ZodOptional<z.ZodString>;
    member_index_mode: z.ZodOptional<z.ZodString>;
    member_count_strategy: z.ZodOptional<z.ZodEnum<{
        include_bots: "include_bots";
        human_only: "human_only";
    }>>;
    api_base_url: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    show_join_alerts: z.ZodOptional<z.ZodBoolean>;
}, z.core.$strip>>;
export declare const ConfigSchema: z.ZodObject<{
    guild: z.ZodObject<{
        id: z.ZodString;
        name: z.ZodOptional<z.ZodString>;
        ownerId: z.ZodOptional<z.ZodString>;
    }, z.core.$strip>;
    channels: z.ZodObject<{
        auditLog: z.ZodString;
        welcome: z.ZodOptional<z.ZodString>;
        introduce: z.ZodOptional<z.ZodString>;
        verify: z.ZodOptional<z.ZodString>;
        guideline: z.ZodOptional<z.ZodString>;
        rolesPanel: z.ZodOptional<z.ZodString>;
    }, z.core.$strip>;
    roleAssignments: z.ZodDefault<z.ZodObject<{
        staffRoleIds: z.ZodDefault<z.ZodArray<z.ZodString>>;
        autoAssign: z.ZodDefault<z.ZodArray<z.ZodObject<{
            id: z.ZodString;
            label: z.ZodString;
            emoji: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            description: z.ZodOptional<z.ZodString>;
            assignOnJoin: z.ZodDefault<z.ZodBoolean>;
        }, z.core.$strip>>>;
        reactions: z.ZodDefault<z.ZodArray<z.ZodObject<{
            id: z.ZodString;
            label: z.ZodString;
            emoji: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            description: z.ZodOptional<z.ZodString>;
            assignOnJoin: z.ZodDefault<z.ZodBoolean>;
        }, z.core.$strip>>>;
    }, z.core.$strip>>;
    features: z.ZodDefault<z.ZodObject<{
        welcomeMessage: z.ZodDefault<z.ZodBoolean>;
        autoRoles: z.ZodDefault<z.ZodBoolean>;
        guidelineSync: z.ZodDefault<z.ZodBoolean>;
        scrimHelper: z.ZodDefault<z.ZodBoolean>;
        countBotsInMemberCount: z.ZodDefault<z.ZodBoolean>;
    }, z.core.$strip>>;
    onboarding: z.ZodDefault<z.ZodObject<{
        guideUrl: z.ZodOptional<z.ZodString>;
        guideLabel: z.ZodDefault<z.ZodString>;
        rolesButtonLabel: z.ZodDefault<z.ZodString>;
        rolesChannelId: z.ZodOptional<z.ZodString>;
        dm: z.ZodDefault<z.ZodObject<{
            enabled: z.ZodDefault<z.ZodBoolean>;
            template: z.ZodOptional<z.ZodString>;
            fallbackMessage: z.ZodOptional<z.ZodString>;
        }, z.core.$strip>>;
        timezone: z.ZodDefault<z.ZodString>;
    }, z.core.$strip>>;
    embeds: z.ZodDefault<z.ZodObject<{
        welcomeTemplate: z.ZodOptional<z.ZodString>;
        guidelineTemplate: z.ZodOptional<z.ZodString>;
        verifyTemplate: z.ZodOptional<z.ZodString>;
    }, z.core.$strip>>;
    verify: z.ZodOptional<z.ZodObject<{
        channel_id: z.ZodString;
        role_id: z.ZodString;
        mode: z.ZodDefault<z.ZodEnum<{
            button: "button";
            reaction: "reaction";
        }>>;
        prompt: z.ZodDefault<z.ZodString>;
        message_id: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        emoji: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    }, z.core.$strip>>;
    roles: z.ZodOptional<z.ZodObject<{
        channel_id: z.ZodString;
        style: z.ZodDefault<z.ZodEnum<{
            buttons: "buttons";
            reactions: "reactions";
            select: "select";
        }>>;
        roles: z.ZodDefault<z.ZodArray<z.ZodObject<{
            role_id: z.ZodString;
            label: z.ZodString;
            description: z.ZodOptional<z.ZodString>;
            emoji: z.ZodOptional<z.ZodString>;
            hidden: z.ZodDefault<z.ZodBoolean>;
            sort_order: z.ZodDefault<z.ZodNumber>;
        }, z.core.$strip>>>;
        message_id: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        message_content: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    }, z.core.$strip>>;
    role_emoji_map: z.ZodDefault<z.ZodRecord<z.ZodString, z.ZodString>>;
    introduce: z.ZodOptional<z.ZodObject<{
        channel_id: z.ZodString;
        mention_role_ids: z.ZodDefault<z.ZodArray<z.ZodString>>;
        embed_title: z.ZodDefault<z.ZodString>;
        footer_text: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    }, z.core.$strip>>;
    introduce_schema: z.ZodOptional<z.ZodObject<{
        fields: z.ZodDefault<z.ZodArray<z.ZodObject<{
            field_id: z.ZodString;
            label: z.ZodString;
            placeholder: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            required: z.ZodDefault<z.ZodBoolean>;
            enabled: z.ZodDefault<z.ZodBoolean>;
            max_length: z.ZodDefault<z.ZodNumber>;
        }, z.core.$strip>>>;
    }, z.core.$strip>>;
    settings: z.ZodDefault<z.ZodObject<{
        locale: z.ZodOptional<z.ZodString>;
        timezone: z.ZodOptional<z.ZodString>;
        member_index_mode: z.ZodOptional<z.ZodString>;
        member_count_strategy: z.ZodOptional<z.ZodEnum<{
            include_bots: "include_bots";
            human_only: "human_only";
        }>>;
        api_base_url: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        show_join_alerts: z.ZodOptional<z.ZodBoolean>;
    }, z.core.$strip>>;
    welcome: z.ZodOptional<z.ZodObject<{
        channel_id: z.ZodString;
        title_template: z.ZodDefault<z.ZodString>;
        description_template: z.ZodDefault<z.ZodString>;
        message_template: z.ZodDefault<z.ZodString>;
        mode: z.ZodDefault<z.ZodEnum<{
            embed: "embed";
            card: "card";
        }>>;
        member_index_mode: z.ZodDefault<z.ZodEnum<{
            include_bots: "include_bots";
            exclude_bots: "exclude_bots";
        }>>;
        join_field_label: z.ZodDefault<z.ZodString>;
        join_timezone: z.ZodDefault<z.ZodString>;
        buttons: z.ZodDefault<z.ZodArray<z.ZodObject<{
            label: z.ZodString;
            target: z.ZodEnum<{
                url: "url";
                channel: "channel";
            }>;
            value: z.ZodString;
            emoji: z.ZodNullable<z.ZodOptional<z.ZodString>>;
        }, z.core.$strip>>>;
        footer_text: z.ZodDefault<z.ZodString>;
        thread_name_template: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        card: z.ZodOptional<z.ZodNullable<z.ZodObject<{
            background_image: z.ZodString;
            font_path: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            font_family: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            title_template: z.ZodDefault<z.ZodString>;
            subtitle_template: z.ZodDefault<z.ZodString>;
            body_template: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            text_color: z.ZodDefault<z.ZodString>;
            accent_color: z.ZodDefault<z.ZodString>;
            overlay_color: z.ZodDefault<z.ZodOptional<z.ZodNullable<z.ZodString>>>;
            avatar_border_color: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            avatar_offset_x: z.ZodDefault<z.ZodNumber>;
            avatar_offset_y: z.ZodDefault<z.ZodNumber>;
            title_offset_x: z.ZodDefault<z.ZodNumber>;
            title_offset_y: z.ZodDefault<z.ZodNumber>;
            title_font_size: z.ZodDefault<z.ZodNumber>;
            subtitle_offset_x: z.ZodDefault<z.ZodNumber>;
            subtitle_offset_y: z.ZodDefault<z.ZodNumber>;
            subtitle_font_size: z.ZodDefault<z.ZodNumber>;
            body_offset_x: z.ZodDefault<z.ZodNumber>;
            body_offset_y: z.ZodDefault<z.ZodNumber>;
            body_font_size: z.ZodDefault<z.ZodNumber>;
        }, z.core.$strict>>>;
    }, z.core.$strict>>;
    rag: z.ZodOptional<z.ZodDefault<z.ZodObject<{
        prompts: z.ZodDefault<z.ZodObject<{
            base: z.ZodString;
            help: z.ZodString;
            coach: z.ZodString;
            chat: z.ZodString;
        }, z.core.$strip>>;
        feelings: z.ZodDefault<z.ZodObject<{
            excitement: z.ZodDefault<z.ZodNumber>;
            empathy: z.ZodDefault<z.ZodNumber>;
            probability: z.ZodDefault<z.ZodNumber>;
            cooldown_minutes: z.ZodDefault<z.ZodNumber>;
            default_mode: z.ZodDefault<z.ZodEnum<{
                help: "help";
                coach: "coach";
                chat: "chat";
            }>>;
        }, z.core.$strip>>;
        short_term: z.ZodDefault<z.ZodObject<{
            excluded_channels: z.ZodDefault<z.ZodArray<z.ZodString>>;
        }, z.core.$strip>>;
    }, z.core.$strip>>>;
}, z.core.$strip>;
export type BotConfig = z.infer<typeof ConfigSchema>;
export type VerifyConfig = z.infer<typeof VerifyConfigSchema>;
export type RolesPanelConfig = z.infer<typeof RolesPanelConfigSchema>;
export type IntroduceConfig = z.infer<typeof IntroduceConfigSchema>;
export type IntroduceSchemaConfig = z.infer<typeof IntroduceSchemaConfigSchema>;
export type WelcomeConfig = z.infer<typeof WelcomeConfigSchema>;
export type WelcomeCardConfig = z.infer<typeof WelcomeCardConfigSchema>;
export type RagConfig = z.infer<typeof RagConfigSchema>;
export {};
//# sourceMappingURL=schema.d.ts.map